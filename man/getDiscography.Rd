% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/AllMethods.R
\name{getDiscography}
\alias{getDiscography}
\alias{getDiscography,ProteoDiscography-method}
\title{Retrieve imported genomic variants, splice-junctions and manual sequences.}
\usage{
getDiscography(x)

\S4method{getDiscography}{ProteoDiscography}(x)
}
\arguments{
\item{x}{(ProteoDiscography): ProteoDiscography object.}
}
\value{
Return a list of imported records, per category (genomic variants, splice-junctions and manual sequences).
}
\description{
Retrieve imported genomic variants, splice-junctions and manual sequences.
}
\examples{

ProteoDiscography.hg19 <- ProteoDisco::generateProteoDiscography(
  TxDb = TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene, 
  genomeSeqs = BSgenome.Hsapiens.UCSC.hg19::BSgenome.Hsapiens.UCSC.hg19
)

# Supply the ProteoDiscography with genomic variants to incorporate in downstream analysis. This can be one or multiple VCF / MAF files.
# Additional manual sequences and exon-exon mapping (i.e., splice junctions) can also be given as shown in the sections below.
ProteoDiscography.hg19 <- ProteoDisco::importGenomicVariants(
  ProteoDiscography = ProteoDiscography.hg19,
  # Provide the VCF / MAF files, if more then one supply a vector of files and corresponding samplenames.
  files = system.file('extdata', 'validationSet_hg19.vcf', package = 'ProteoDisco'), 
  # We can replace the original samples within the VCF with nicer names.
  samplenames = 'Validation Set (GRCh37)',
  # Number of threads used for parallelization.
  # We run samples sequentially and parallelize within (variant-wise multi-threading).
  threads = 1, 
  # To increase import-speed for this example, do not check for validity of the reference anchor with the given reference sequences.
  performAnchorCheck = FALSE
)

# Retrieve the imported records.
getDiscography(ProteoDiscography.hg19)

}
