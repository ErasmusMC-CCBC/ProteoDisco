% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/AllMethods.R
\name{checkProteotypicFragments}
\alias{checkProteotypicFragments}
\alias{checkProteotypicFragments,ProteoDiscography-method}
\title{Determine proteotypic fragments within the translated CDS}
\usage{
checkProteotypicFragments(
  x,
  enzymUsed = "trypsin",
  missedCleavages = 0,
  additionalPeptides = NULL,
  checkWithinMutantSeqs = FALSE
)

\S4method{checkProteotypicFragments}{ProteoDiscography}(
  x,
  enzymUsed = "Trypsin",
  missedCleavages = 0,
  additionalPeptides = NULL,
  checkWithinMutantSeqs = FALSE
)
}
\arguments{
\item{x}{({ProteoDiscography}): ProteoDiscography object which stores the annotation and genomic sequences.}

\item{enzymUsed}{(character): Preferred proteasome used in cleaving the peptide sequences, e.g. trypsin.}

\item{missedCleavages}{(integer): Number of subsequent missed cleavages.}

\item{additionalPeptides}{(AAStringSet): Additional peptide sequences against which to check proteotypic fragments, besides the input TxDb.
If left empty, only the (translated) input TxDb will be checked.}

\item{checkWithinMutantSeqs}{(logical): Should proteotypic fragments also not be present within another mutant peptide-sequence?}
}
\value{
ProteoDiscography with additional information added to the transcript sequence information.

{ProteoDiscography} with an additional column specifying the number of proteotypic fragments per record.
}
\description{
Proteotypic fragments are checked against the input TxDb (and additional peptide sequences) to infer whether peptide sequences
contain one or multiple proteotypic fragment(s) after cleavage by a selected protease.
}
\examples{

 ProteoDiscography.hg19 <- ProteoDisco::generateProteoDiscography(
   TxDb = TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene,
   genomeSeqs = BSgenome.Hsapiens.UCSC.hg19::BSgenome.Hsapiens.UCSC.hg19
 )

 ProteoDiscography.hg19 <- ProteoDisco::importGenomicVariants(
   ProteoDiscography = ProteoDiscography.hg19,
   # Provide the VCF / MAF files, if more then one supply a vector of files and corresponding samplenames.
   files = system.file('extdata', 'validationSet_hg19.vcf', package = 'ProteoDisco'),
   # We can replace the original samples within the VCF with nicer names.
   samplenames = 'Validation Set (GRCh37)',
   # Number of threads used for parallelization.
   # We run samples sequentially and parallelize within (variant-wise multi-threading).
   threads = 1,
   # To increase import-speed for this example, do not check for validity of the reference anchor with the given reference sequences.
   performAnchorCheck = FALSE
 )

 ProteoDiscography.hg19 <- ProteoDisco::incorporateGenomicVariants(ProteoDiscography.hg19)

 # Results will now contain additional information about proteotypic fragments.
 # With a large TxDb, this can take a while.
 # ProteoDiscography.hg19 <- ProteoDisco::checkProteotypicFragments(ProteoDiscography.hg19)

}
\author{
Job van Riet \email{j.vanriet@erasmusmc.nl}

Wesley van de Geer \email{w.vandegeer@erasmusmc.nl}
}
\concept{methods}
\keyword{methods}
